MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "http://storage.googleapis.com/public-models/efficientnet-b0-08094119.pth"
  #ROI_BOX_HEAD:
  #    FEATURE_EXTRACTOR: "EfficientNetROIFeatureExtractor"
  BACKBONE:
      CONV_BODY: 'E-B0'
  RESNETS:
#    BACKBONE_OUT_CHANNELS: 1280  # 320
#    RES2_OUT_CHANNELS: 320  # 80
    BACKBONE_OUT_CHANNELS: 320
    RES2_OUT_CHANNELS: 80
  RPN:
    PRE_NMS_TOP_N_TRAIN: 6000
    PRE_NMS_TOP_N_TEST: 1000

  ROI_BOX_HEAD:
    POOLER_SCALES: (0.03125, )  # (1.0 / 16,)
DATASETS:
  TRAIN: ("coco_2017_val_quick",)
  TEST: ("coco_2017_val_quick",)
SOLVER:
  #BASE_LR: 0.02
  WEIGHT_DECAY: 0.0001
  #STEPS: (1200, 1600)
  #MAX_ITER: 2000
#  WARMUP_FACTOR: 0.3
#  WARMUP_ITERS: 100

  # 1 GPU:
  BASE_LR: 0.0025
  MAX_ITER: 5000
  STEPS: [0, 4000, 4500]
  IMS_PER_BATCH: 2  # for 1GPUs

INPUT:
  PIXEL_MEAN: [0.485, 0.456, 0.406]  # [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [0.229, 0.224, 0.225]   # [1., 1., 1.]
  TO_BGR255: False
#  MIN_SIZE_TRAIN: (400,)  # Size of the smallest side of the image during training
#  MAX_SIZE_TRAIN: 600    # Maximum size of the side of the image during training
#  MIN_SIZE_TEST: 400  # Size of the smallest side of the image during testing
#  MAX_SIZE_TEST: 600  # Maximum size of the side of the image during testing

  # 8 GPUs:
#   BASE_LR: 0.02
#   MAX_ITER: 150
#   STEPS: [0, 75, 100]
#  IMS_PER_BATCH: 16  # for 8GPUs
